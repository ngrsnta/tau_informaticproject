<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>